{"ast":null,"code":"var _jsxFileName = \"E:\\\\EXERCISE\\\\FISZKI\\\\Flashcards\\\\flashcards\\\\src\\\\components\\\\cart\\\\cart.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n// import {TiChevronLeftOutline, TiChevronRightOutline} from 'https://cdn.skypack.dev/react-icons/ti';\nimport \"../cart/cart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Cart({\n  eng = \"QUITE\",\n  pl = \"CAŁKIEM\",\n  reverseCart = false,\n  perspective = \"1200px\",\n  rotateY = 45,\n  scale = 0.6,\n  transformX = 0,\n  zindex = 1,\n  flashcards,\n  blur = \"2px\"\n}) {\n  _s();\n  // VARIABLES\n  const [animatedCart, setAnimatedCart] = useState(false);\n  const [word, setWord] = useState(pl);\n  const [referencePoint, setReferencePoint] = useState(0);\n  const [rotate, setRotate] = useState(0);\n  const [isDragging, setIsDragging] = useState(false);\n  const [active, setActive] = useState(0); // która karta w danej chwili jest widoczna ! \n\n  // METHOD\n  function reverseCart() {\n    setAnimatedCart(!animatedCart);\n    if (word == pl) {\n      setWord(eng);\n    } else if (word == eng) {\n      setWord(pl);\n    }\n  }\n  const handleMouseDown = e => {\n    console.log(\"FIRST STATE\");\n    setIsDragging(true);\n    setReferencePoint(e.clientX);\n  };\n  const handleMouseMove = e => {\n    if (isDragging) {\n      const mousePos_x = e.clientX;\n      const vector_x = mousePos_x - referencePoint;\n      setRotate(vector_x);\n      console.log(\"Vector: \" + vector_x);\n    }\n  };\n  const handleMouseUp = () => {\n    if (rotate < -100) {\n      setActive(active + 1);\n    }\n    setRotate(0);\n    setIsDragging(false);\n  };\n  useEffect(() => {\n    reverseCart();\n  }, [eng]);\n\n  // RETURN STATEMENT\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cart-container ${animatedCart ? 'animated-cart-container' : ''}`,\n    onClick: reverseCart,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    style: {\n      '--test': 'red',\n      '--scale': scale,\n      '--rotate': rotate,\n      '--transformX': transformX,\n      '--zindex': zindex\n    },\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", word, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Cart, \"frKr6/WaUDiJZ0KfhczyG/MoedY=\");\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Cart","eng","pl","reverseCart","perspective","rotateY","scale","transformX","zindex","flashcards","blur","_s","animatedCart","setAnimatedCart","word","setWord","referencePoint","setReferencePoint","rotate","setRotate","isDragging","setIsDragging","active","setActive","handleMouseDown","e","console","log","clientX","handleMouseMove","mousePos_x","vector_x","handleMouseUp","className","onClick","onMouseDown","onMouseMove","onMouseUp","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/EXERCISE/FISZKI/Flashcards/flashcards/src/components/cart/cart.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n// import {TiChevronLeftOutline, TiChevronRightOutline} from 'https://cdn.skypack.dev/react-icons/ti';\r\nimport \"../cart/cart.css\";\r\n\r\nexport function Cart( { eng = \"QUITE\", pl = \"CAŁKIEM\", \r\n                        reverseCart = false,\r\n                        perspective = \"1200px\", \r\n                        rotateY = 45,\r\n                        scale = 0.6,\r\n                        transformX = 0,\r\n                        zindex = 1,\r\n                        flashcards,\r\n                        blur = \"2px\" } ){\r\n\r\n    // VARIABLES\r\n    const [animatedCart, setAnimatedCart] = useState( false );\r\n    const [word, setWord] = useState(pl);\r\n    const [referencePoint, setReferencePoint] = useState(0);\r\n    const [rotate, setRotate] = useState(0);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [active, setActive] = useState(0); // która karta w danej chwili jest widoczna ! \r\n\r\n\r\n    // METHOD\r\n    function reverseCart(){\r\n        setAnimatedCart(!animatedCart);\r\n\r\n        if (word == pl){setWord(eng);} \r\n        else if (word == eng){setWord(pl);} \r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        console.log(\"FIRST STATE\");\r\n        setIsDragging(true);\r\n        setReferencePoint(e.clientX);\r\n      } \r\n    \r\n    const handleMouseMove = (e) => {\r\n    if(isDragging){\r\n        const mousePos_x = e.clientX;\r\n        const vector_x = mousePos_x - referencePoint;\r\n        setRotate(vector_x);\r\n        console.log(\"Vector: \" + vector_x);\r\n    }\r\n    }\r\n\r\n    const handleMouseUp = () => {\r\n\r\n    if (rotate < -100){\r\n        setActive(active+1);\r\n    }\r\n\r\n\r\n\r\n    setRotate(0);\r\n    setIsDragging(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        reverseCart();\r\n    }, [eng]);\r\n\r\n    // RETURN STATEMENT\r\n    return(\r\n        <div \r\n            className={`cart-container ${animatedCart ? 'animated-cart-container' : ''}`} \r\n            onClick={reverseCart}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseUp={handleMouseUp}\r\n            style={\r\n                {'--test' : 'red',\r\n                '--scale' : scale,\r\n                '--rotate' : rotate,\r\n                '--transformX' : transformX,\r\n                '--zindex' : zindex}\r\n                }>\r\n\r\n            <span> {word} </span>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}